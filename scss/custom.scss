@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";
@import "../node_modules/bootstrap/scss/maps";
// @import "../node_modules/bootstrap/scss/mixins";


// Создайте свою карту
$custom-colors: ("main": #DF9F7D,  "black": #222222, "light": #E6E6E6, "grey": rgba(34, 34, 34, .04));
$font-size-base: 1rem;
$custom-font-sizes: (
  10: $font-size-base * 1, 
  11: $font-size-base * 1.1, 
  12: $font-size-base * 1.2,  //use
  14: $font-size-base * 1.4, //use      
  16: $font-size-base * 1.6,
  18: $font-size-base * 1.8, //use
  20: $font-size-base * 2, 
  22: $font-size-base * 2.2, 
  24: $font-size-base * 2.4, 
  25: $font-size-base * 2.5,  
  28: $font-size-base * 2.8, 
  30: $font-size-base * 3,   
  32: $font-size-base * 3.2,   
  35: $font-size-base * 3.5, 
  40f: 2.1vw,
  40: $font-size-base * 4, 
  45: $font-size-base * 4.5, 
  48: $font-size-base * 4.8, 
  50: $font-size-base * 5, 
  55: $font-size-base * 5.5,
  60: $font-size-base * 6,   
  70: $font-size-base * 7,     
);
$custom-grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 1080px,
  lg: 1080px,
  xl: 1400px,
  xxl: 1400px
);
$custom-container-max-widths: (
  sm: 540px,
  md: 960px,
  lg: 960px,
  xl: 1240px,
  xxl: 1240px
);
$spacer: 1rem !default;
$custome-spacers: (
  0: 0,
  2: $spacer * .2,  //use
  3: $spacer * .3, //use   
  4: $spacer * .4, //use
  5: $spacer * .5, //use
  6: $spacer * .6,  //use 
  8: $spacer * .8,   //use
  10: $spacer, //use
  12: $spacer * 1.2, //use
  14: $spacer * 1.4, //use
  15: $spacer * 1.5,     
  16: $spacer * 1.6, //use
  18: $spacer * 1.8, //use
  20: $spacer * 2,  //use  
  24: $spacer * 2.4,  //use  
  25: $spacer * 2.5, //use
  30: $spacer * 3,   //use
  32: $spacer * 3.2,   //use
  35: $spacer * 3.5,   //use
  36: $spacer * 3.6,   //use
  40: $spacer * 4,   
  50: $spacer  * 5,  //use 
  60: $spacer * 6, //use
  80: $spacer * 8,   
);

$gutters: $custome-spacers;
$spacers: map-merge($spacers, $custome-spacers);
$font-sizes: map-merge($font-sizes, $custom-font-sizes);
$theme-colors: map-merge($theme-colors, $custom-colors);
$grid-breakpoints: map-merge($grid-breakpoints, $custom-grid-breakpoints);
$container-max-widths: map-merge($container-max-widths, $custom-container-max-widths);
$container-padding-x: 3.2rem;
$modal-xl: 990px;
$modal-lg: 559px;
$modal-md: 520px;

// Vendor

@import "../node_modules/bootstrap/scss/vendor/rfs";

// Mixins

// @import "../node_modules/bootstrap/scss/mixins/alert";
@import "../node_modules/bootstrap/scss/mixins/backdrop";
// @import "../node_modules/bootstrap/scss/mixins/banner";
@import "../node_modules/bootstrap/scss/mixins/border-radius";
@import "../node_modules/bootstrap/scss/mixins/box-shadow";
@import "../node_modules/bootstrap/scss/mixins/breakpoints";
// @import "../node_modules/bootstrap/scss/mixins/buttons";
// @import "../node_modules/bootstrap/scss/mixins/caret";
// @import "../node_modules/bootstrap/scss/mixins/clearfix";
@import "../node_modules/bootstrap/scss/mixins/color-mode";
// @import "../node_modules/bootstrap/scss/mixins/color-scheme";
@import "../node_modules/bootstrap/scss/mixins/container";
// @import "../node_modules/bootstrap/scss/mixins/deprecate";
// @import "../node_modules/bootstrap/scss/mixins/forms";
// @import "../node_modules/bootstrap/scss/mixins/gradients";
@import "../node_modules/bootstrap/scss/mixins/grid";
// @import "../node_modules/bootstrap/scss/mixins/image";
// @import "../node_modules/bootstrap/scss/mixins/list-group";
@import "../node_modules/bootstrap/scss/mixins/lists";
// @import "../node_modules/bootstrap/scss/mixins/pagination";
// @import "../node_modules/bootstrap/scss/mixins/reset-text";
// @import "../node_modules/bootstrap/scss/mixins/resize";
// @import "../node_modules/bootstrap/scss/mixins/table-variants";
// @import "../node_modules/bootstrap/scss/mixins/text-truncate";
@import "../node_modules/bootstrap/scss/mixins/transition";
@import "../node_modules/bootstrap/scss/mixins/utilities";
// @import "../node_modules/bootstrap/scss/mixins/visually-hidden";

//Component

// @import "../node_modules/bootstrap/scss/accordion";
// @import "../node_modules/bootstrap/scss/alert";
//@import "../node_modules/bootstrap/scss/badge";
//@import "../node_modules/bootstrap/scss/breadcrumb";
//@import "../node_modules/bootstrap/scss/button-group";
// @import "../node_modules/bootstrap/scss/buttons";
//@import "../node_modules/bootstrap/scss/card";
//@import "../node_modules/bootstrap/scss/carousel";
//@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/containers";
//@import "../node_modules/bootstrap/scss/dropdown";
//@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/grid";
// @import "../node_modules/bootstrap/scss/helpers";
// @import "../node_modules/bootstrap/scss/images";
//@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/modal";
//@import "../node_modules/bootstrap/scss/nav";
//@import "../node_modules/bootstrap/scss/navbar";
// @import "../node_modules/bootstrap/scss/offcanvas";
//@import "../node_modules/bootstrap/scss/pagination";
//@import "../node_modules/bootstrap/scss/placeholders";
//@import "../node_modules/bootstrap/scss/popover";
//@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/root";
//@import "../node_modules/bootstrap/scss/spinners";
// @import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/toasts";
// @import "../node_modules/bootstrap/scss/tooltip";
//@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/utilities";
//@import "../node_modules/bootstrap/scss/code";

//Helpers

// @import "../node_modules/bootstrap/scss/helpers/clearfix";
// @import "../node_modules/bootstrap/scss/helpers/color-bg";
// @import "../node_modules/bootstrap/scss/helpers/colored-links";
// @import "../node_modules/bootstrap/scss/helpers/focus-ring";
// @import "../node_modules/bootstrap/scss/helpers/icon-link";
// @import "../node_modules/bootstrap/scss/helpers/position";
// @import "../node_modules/bootstrap/scss/helpers/ratio";
// @import "../node_modules/bootstrap/scss/helpers/stacks";
// @import "../node_modules/bootstrap/scss/helpers/stretched-link";
// @import "../node_modules/bootstrap/scss/helpers/text-truncation";
// @import "../node_modules/bootstrap/scss/helpers/visually-hidden";
// @import "../node_modules/bootstrap/scss/helpers/vr";



$utilities: map-merge(
  $utilities,
  (
    "mix-blend-mode": (
      property: mix-blend-mode,
      class: mbm,
      values: darken 
    )  
  )
);
$utilities: map-merge(
  $utilities,
  (
    "object-fit": (
      property: object-fit,
      class: of,
      values: cover contain none unset
    )  
  )
);
$utilities: map-merge(
  $utilities,
  (
    "object-position": (
      property: object-fit,
      class: obp,
      values: (
        left: left,
        right: right,
        top: top,
        bottom: bottom,
        center: center
      )
    )  
  )
);
$utilities: map-merge(
  $utilities,
  (
    "color": map-merge(
      map-get($utilities, "color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "color"), "values"),
          (
            $custom-colors
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "background-color": map-merge(
      map-get($utilities, "background-color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "background-color"), "values"),
          (
            $custom-colors
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "border-color": map-merge(
      map-get($utilities, "border-color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "border-color"), "values"),
          (
            $custom-colors
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "max-width": map-merge(
      map-get($utilities, "max-width"),
      (
        values: map-merge(
          map-get(map-get($utilities, "max-width"), "values"),
          (
            100: 100%, 
            50: 50%,
            25: 25%
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "max-width": map-merge(
      map-get($utilities, "max-width"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "opacity": map-merge(
      map-get($utilities, "opacity"),      
      (
        values: map-merge(
          map-get(map-get($utilities, "opacity"), "values"),
          (
            0: 0,
            1: 1,
            0_8: .8,
            0_7: .85,
            0_6: .6, 
            0_5: .5, //use
            0_4: .4,
            0_3: .3, 
            0_2: .2, 
            0_1: .1
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "font-weight": map-merge(
      map-get($utilities, "font-weight"),
      (
        values: map-merge(
          map-get(map-get($utilities, "font-weight"), "values"),
          (
            lg: 300,
            rg: 400,               
            md: 500,            
            sb: 600, //use            
            bl: $font-weight-bold, //use            
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "line-height": map-merge(
      map-get($utilities, "line-height"),
      (
        values: map-merge(
          map-get(map-get($utilities, "line-height"), "values"),
          (
            0_5: 0.5,
            0_7: 0.7,
            0_75: 0.75,
            0_8: 0.8,
            0_9: 0.9, //use
            1: 1,
            1_1: 1.1, //use
            1_2: 1.2, 
            sm: $line-height-sm,
            1_5: $line-height-base, //use 
            1_3: 1.3, //use
            1_4: 1.4, //use
            1_6: 1.6,
            lg: $line-height-lg,
            17: 17px,
            20: 20px,
            21: 21px,
            n: normal //use
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "gradient": map-merge(
      map-get($utilities, "gradient"),
      (
        values: map-merge(
          map-get(map-get($utilities, "gradient"), "values"),
          (
            main_g: linear-gradient(115.44deg, #FF6040 0%, #FED566 100%),
            second_g: linear-gradient(90deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%),
            main_o: linear-gradient(115.44deg, rgba(255, 96, 64, 0.2) 0%, rgba(254, 213, 102, 0.2) 100%),
            grey_g: linear-gradient(99.71deg, #F8F7F6 0%, #FFFFFF 99.93%)
          ),
        ),
      ),
    ),
  )
);
$custom-radius: (
  null: $border-radius,
  0: 0,
  // 1: $border-radius-sm,
  2: $border-radius,
  3: $border-radius-lg,
  1: .1rem, 
  4: .4rem,
  5: .5rem,
  6: .6rem,
  8: .8rem, //use
  10: 1rem, //use
  12: 1.2rem,
  15: 1.5rem, //use 
  16: 1.6rem, //use 
  20: 2rem, //use
  24: 2.4rem, //use
  25: 2.5rem,
  30: 3.0rem,
  circle: 50%, 
  pill: $border-radius-pill //use
);
$utilities: map-merge(
  $utilities,
  (
    "rounded": map-merge(
      map-get($utilities, "rounded"),
      (
        values: map-merge(
          map-get(map-get($utilities, "rounded"), "values"),
          (
            $custom-radius
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded": map-merge(
      map-get($utilities, "rounded"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-top": map-merge(
      map-get($utilities, "rounded-top"),
      (
        values: map-merge(
          map-get(map-get($utilities, "rounded-top"), "values"),
          (
            $custom-radius
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-top": map-merge(
      map-get($utilities, "rounded-top"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-end": map-merge(
      map-get($utilities, "rounded-end"),
      (
        values: map-merge(
          map-get(map-get($utilities, "rounded-end"), "values"),
          (
            $custom-radius
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-end": map-merge(
      map-get($utilities, "rounded-end"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-bottom": map-merge(
      map-get($utilities, "rounded-bottom"),
      (
        values: map-merge(
          map-get(map-get($utilities, "rounded-bottom"), "values"),
          (
            $custom-radius
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-bottom": map-merge(
      map-get($utilities, "rounded-bottom"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-start": map-merge(
      map-get($utilities, "rounded-start"),
      (
        values: map-merge(
          map-get(map-get($utilities, "rounded-start"), "values"),
          (
            $custom-radius
          ),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "rounded-start": map-merge(
      map-get($utilities, "rounded-start"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "font-size": map-merge(
      map-get($utilities, "font-size"), ( responsive: true, rfs: false),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "overflow": map-merge(
      map-get($utilities, "overflow"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "white-space": map-merge(
      map-get($utilities, "white-space"), ( responsive: true),      
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "opacity": map-merge(
      map-get($utilities, "opacity"), (class: 'o'),      
    ),
  )
);



@import "../node_modules/bootstrap/scss/utilities/api";






